{"ast":null,"code":"var _jsxFileName = \"/home/akpikk/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    header\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 32\n  }, this);\n};\n\n_c = Header;\n\nconst Button = _ref2 => {\n  let {\n    handleClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst StatisticsLine = _ref3 => {\n  let {\n    text,\n    counter\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", counter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = StatisticsLine;\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"good\",\n      counter: props.counter[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"neutral\",\n      counter: props.counter[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"bad\",\n      counter: props.counter[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"all\",\n      counter: props.counter[0] + props.counter[1] + props.counter[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      header: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      counter: [good, neutral, bad]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App; //average good * 1 + bad * -1) * 0.1\n//positive good / (good + neutral + bad)) * 100 + \"%\"\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticsLine\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/akpikk/part1/src/App.js"],"names":["useState","Header","header","Button","handleClick","text","StatisticsLine","counter","Statistics","props","App","good","setGood","neutral","setNeutral","bad","setBad","handleGood","handleNeutral","handleBad"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst Header = ({ header }) => <h1>{header}</h1>;\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>{text}</button>\n);\n\nconst StatisticsLine = ({ text, counter }) => (\n  <p>\n    {text} {counter}\n  </p>\n);\n\nconst Statistics = (props) => {\n  return (\n    <div>\n      <StatisticsLine text={\"good\"} counter={props.counter[0]} />\n      <StatisticsLine text={\"neutral\"} counter={props.counter[1]} />\n      <StatisticsLine text={\"bad\"} counter={props.counter[2]} />\n      <StatisticsLine\n        text={\"all\"}\n        counter={props.counter[0] + props.counter[1] + props.counter[2]}\n      />\n    </div>\n  );\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  return (\n    <div>\n      <Header header={\"give feedback\"} />\n      <Button handleClick={handleGood} text={\"good\"} />\n      <Button handleClick={handleNeutral} text={\"neutral\"} />\n      <Button handleClick={handleBad} text={\"bad\"} />\n      <Header header={\"statistics\"} />\n      <Statistics counter={[good, neutral, bad]} />\n    </div>\n  );\n};\n\nexport default App;\n\n//average good * 1 + bad * -1) * 0.1\n//positive good / (good + neutral + bad)) * 100 + \"%\"\n"]},"metadata":{},"sourceType":"module"}